{"version":3,"file":"caccabd573dcc713a6ed713c4b50106fca371f70-38f0ac3a595a30bb27f0.js","mappings":"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","sources":["webpack://minjoo-da-woon/./node_modules/classnames/index.js","webpack://minjoo-da-woon/./src/components/Caption/index.tsx","webpack://minjoo-da-woon/./src/components/Caption/style.module.scss","webpack://minjoo-da-woon/./src/components/IntersectionObserver/context.tsx","webpack://minjoo-da-woon/./src/components/IntersectionObserver/useIntersectionObserver.ts","webpack://minjoo-da-woon/./src/components/Cities/style.module.scss","webpack://minjoo-da-woon/./src/components/ImageSection/index.tsx","webpack://minjoo-da-woon/./src/components/ImageSection/style.module.scss","webpack://minjoo-da-woon/./src/components/Cities/Da-Woon/1-Seoul.tsx","webpack://minjoo-da-woon/./src/components/Cities/Da-Woon/2-Busan.tsx","webpack://minjoo-da-woon/./src/components/Cities/Da-Woon/3-Saitama.tsx","webpack://minjoo-da-woon/./src/components/Cities/Da-Woon/4-Chicago.tsx","webpack://minjoo-da-woon/./src/components/Cities/Da-Woon/5-Gwangju.tsx","webpack://minjoo-da-woon/./src/components/Cities/Da-Woon/6-Calgary.tsx","webpack://minjoo-da-woon/./src/components/Cities/Da-Woon/7-KAIST.tsx","webpack://minjoo-da-woon/./src/components/Cities/Da-Woon/8-Helsinki.tsx","webpack://minjoo-da-woon/./src/components/Cities/Da-Woon/9-Muhanga.tsx","webpack://minjoo-da-woon/./src/components/Cities/Da-Woon/10-Kigali.tsx","webpack://minjoo-da-woon/./src/components/Cities/Da-Woon/11-Berlin.tsx","webpack://minjoo-da-woon/./src/components/Cities/Da-Woon/12-Singapore.tsx","webpack://minjoo-da-woon/./src/components/Cities/Da-Woon/13-Hamburg.tsx","webpack://minjoo-da-woon/./src/components/Cities/Da-Woon/index.tsx","webpack://minjoo-da-woon/./src/components/Cities/Minjoo/1-Seoul.tsx","webpack://minjoo-da-woon/./src/components/Cities/Minjoo/2-Tsukuba.tsx","webpack://minjoo-da-woon/./src/components/Cities/Minjoo/3-Bundang.tsx","webpack://minjoo-da-woon/./src/components/Cities/Minjoo/4-Massachusetts.tsx","webpack://minjoo-da-woon/./src/components/Cities/Minjoo/5-KAIST.tsx","webpack://minjoo-da-woon/./src/components/Cities/Minjoo/6-Yokohama.tsx","webpack://minjoo-da-woon/./src/components/Cities/Minjoo/7-Nara.tsx","webpack://minjoo-da-woon/./src/components/Cities/Minjoo/8-Songpa.tsx","webpack://minjoo-da-woon/./src/components/Cities/Minjoo/9-Hamburg.tsx","webpack://minjoo-da-woon/./src/components/Cities/London.tsx","webpack://minjoo-da-woon/./src/components/Cities/Minjoo/index.tsx","webpack://minjoo-da-woon/./src/components/Cities/index.tsx","webpack://minjoo-da-woon/./src/components/Hero/index.tsx","webpack://minjoo-da-woon/./src/components/Header/index.tsx"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import cx from 'classnames';\nimport React, { useContext, useEffect, useMemo, useRef, useState } from 'react';\n\nimport { HeaderContext } from '../Header/context';\nimport * as s from './style.module.scss';\n\nfunction Caption() {\n  const [scrollbarWidth, setScrollbarWidth] = useState<number>(0);\n\n  const ref = useRef<HTMLDivElement>(null);\n\n  const observer = useRef<ResizeObserver | null>(null);\n\n  useEffect(() => {\n    observer.current = new ResizeObserver(() => {\n      setScrollbarWidth(\n        window.innerWidth - document.documentElement.clientWidth,\n      );\n    });\n\n    observer.current.observe(ref.current!);\n\n    return () => {\n      observer.current?.disconnect();\n    };\n  }, []);\n\n  const { altLeft, altRight, captionEntered, captionPosition } =\n    useContext(HeaderContext);\n\n  const styleLeft = useMemo(\n    () => ({\n      transform: `translate3d(calc(((100vw - ${scrollbarWidth}px) / 2 - 100% - 0.5ch) * ${captionPosition}), 0, 0)`,\n    }),\n    [captionPosition, scrollbarWidth],\n  );\n\n  const styleRight = useMemo(\n    () => ({\n      transform: `translate3d(calc(((100vw - ${scrollbarWidth}px) / -2 + 100% + 0.5ch) * ${captionPosition}), 0, 0)`,\n    }),\n    [captionPosition, scrollbarWidth],\n  );\n\n  return (\n    <div className={cx(s.wrap, { [s.entered]: captionEntered })} ref={ref}>\n      <div className={s.left} style={styleLeft} lang=\"en\">\n        {altLeft}\n      </div>\n      <div className={s.right} style={styleRight} lang=\"en\">\n        {altRight}\n      </div>\n    </div>\n  );\n}\n\nexport default Caption;\n","// extracted by mini-css-extract-plugin\nexport var entered = \"style-module--entered--5ea6e\";\nexport var left = \"style-module--left--7febd\";\nexport var right = \"style-module--right--d0089\";\nexport var wrap = \"style-module--wrap--c174d\";","import React, {\n  ReactNode,\n  createContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\n\ninterface IntersectionObserverInterface {\n  observer: IntersectionObserver | null;\n  currentEntries: IntersectionObserverEntry[];\n}\n\nexport const IntersectionObserverContext =\n  createContext<IntersectionObserverInterface>({\n    observer: null,\n    currentEntries: [],\n  });\n\ninterface Props {\n  children: ReactNode;\n  options?: IntersectionObserverInit;\n}\n\nfunction IntersectionObserverContextProvider({ children, options }: Props) {\n  const [currentEntries, setCurrentEntries] = useState<\n    IntersectionObserverEntry[]\n  >([]);\n  const [observer, setObserver] = useState<IntersectionObserver | null>(null);\n\n  useEffect(() => {\n    setObserver(\n      new IntersectionObserver((entries) => {\n        setCurrentEntries(entries);\n      }, options),\n    );\n  }, [options]);\n\n  useEffect(\n    () => () => {\n      observer?.disconnect();\n    },\n    [observer],\n  );\n\n  const value = useMemo(\n    () => ({\n      observer,\n      currentEntries,\n    }),\n    [currentEntries, observer],\n  );\n\n  return (\n    <IntersectionObserverContext.Provider value={value}>\n      {children}\n    </IntersectionObserverContext.Provider>\n  );\n}\n\nexport default IntersectionObserverContextProvider;\n","import { useContext, useEffect, useMemo } from 'react';\n\nimport { IntersectionObserverContext } from './context';\n\nfunction useIntersectionObserver(node: Element | undefined) {\n  const { observer, currentEntries } = useContext(IntersectionObserverContext);\n\n  const currentEntry = useMemo(\n    () => currentEntries.find((entry) => entry.target === node),\n    [currentEntries, node],\n  );\n\n  useEffect(() => {\n    if (!observer || !node) {\n      return undefined;\n    }\n\n    const target = node;\n\n    observer.observe(target as Element);\n\n    return () => {\n      observer.unobserve(target);\n    };\n  }, [node, observer]);\n\n  return { observer, currentEntry };\n}\n\nexport default useIntersectionObserver;\n","// extracted by mini-css-extract-plugin\nexport var cities = \"style-module--cities--09d5d\";\nexport var london = \"style-module--london--868da\";\nexport var londonIntersection = \"style-module--londonIntersection--09992\";\nexport var sentinel = \"style-module--sentinel--ce4ec\";\nexport var wrap = \"style-module--wrap--d8e38\";","import cx from 'classnames';\nimport React, {\n  ReactNode,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\n\nimport { HeaderContext } from '../Header/context';\nimport useIntersectionObserver from '../IntersectionObserver/useIntersectionObserver';\nimport * as s from './style.module.scss';\n\ninterface Props {\n  className?: string;\n  children: ReactNode;\n  target: 'left' | 'right' | null;\n  alt: string;\n  prevAlt: string;\n  distance: number;\n  prevDistance: number;\n  ratio: number;\n}\n\nfunction ImageSection({\n  className,\n  children,\n  target,\n  alt,\n  prevAlt,\n  distance,\n  prevDistance,\n  ratio,\n}: Props) {\n  const [ref, setRef] = useState<HTMLDivElement>();\n  const onInit = useCallback((node: HTMLDivElement) => {\n    if (!node) return;\n\n    setRef(node);\n  }, []);\n\n  const { currentEntry } = useIntersectionObserver(ref);\n  const { setDistanceLeft, setDistanceRight, setAltLeft, setAltRight } =\n    useContext(HeaderContext);\n\n  const setDistance = useMemo(\n    () => (target === 'left' ? setDistanceLeft : setDistanceRight),\n    [setDistanceLeft, setDistanceRight, target],\n  );\n  const setAlt = useMemo(\n    () => (target === 'left' ? setAltLeft : setAltRight),\n    [setAltLeft, setAltRight, target],\n  );\n\n  useEffect(() => {\n    if (!currentEntry) return;\n\n    const { isIntersecting, intersectionRatio, boundingClientRect } =\n      currentEntry;\n\n    if (!isIntersecting) {\n      return;\n    }\n\n    if (boundingClientRect.y > 0) {\n      setAlt(intersectionRatio > 0.5 ? alt : prevAlt);\n      setDistance((distance - prevDistance) * intersectionRatio + prevDistance);\n    }\n  }, [alt, currentEntry, distance, prevAlt, prevDistance, setAlt, setDistance]);\n\n  return (\n    <section\n      className={cx(className, s.section)}\n      style={{ height: `${100 * ratio}vh` }}\n    >\n      <div className={s.intersection} ref={onInit}>\n        {children}\n      </div>\n    </section>\n  );\n}\n\nexport default ImageSection;\n","// extracted by mini-css-extract-plugin\nexport var intersection = \"style-module--intersection--bb18a\";\nexport var section = \"style-module--section--caeae\";","import { StaticImage } from 'gatsby-plugin-image';\nimport React from 'react';\n\nimport { ImageSectionProps } from '../../../types/ImageSection';\nimport { INITIAL_DISTANCE } from '../../Header/context';\nimport ImageSection from '../../ImageSection';\n\nexport const alt = 'Seoul, 1987';\nexport const distance = INITIAL_DISTANCE;\n\nfunction Seoul({ ratio = 1 }: ImageSectionProps) {\n  return (\n    <ImageSection\n      target=\"left\"\n      alt={alt}\n      prevAlt=\"Da-Woon's Life Path\"\n      distance={distance}\n      prevDistance={INITIAL_DISTANCE}\n      ratio={ratio}\n    >\n      <StaticImage\n        alt={alt}\n        objectFit=\"cover\"\n        objectPosition=\"right center\"\n        quality={70}\n        src=\"../../../images/seoul-left.jpg\"\n        style={{ width: '100%' }}\n      />\n    </ImageSection>\n  );\n}\n\nexport default Seoul;\n","import { StaticImage } from 'gatsby-plugin-image';\nimport React from 'react';\n\nimport { ImageSectionProps } from '../../../types/ImageSection';\nimport ImageSection from '../../ImageSection';\nimport { alt as prevAlt, distance as prevDistance } from './1-Seoul';\n\nexport const alt = 'Busan, 1988';\nexport const distance = 3;\n\nfunction Busan({ ratio = 1 }: ImageSectionProps) {\n  return (\n    <ImageSection\n      target=\"left\"\n      alt={alt}\n      prevAlt={prevAlt}\n      distance={distance}\n      prevDistance={prevDistance}\n      ratio={ratio}\n    >\n      <StaticImage\n        alt={alt}\n        objectFit=\"cover\"\n        objectPosition=\"65% center\"\n        quality={70}\n        src=\"../../../images/busan.jpg\"\n        style={{ width: '100%' }}\n      />\n    </ImageSection>\n  );\n}\n\nexport default Busan;\n","import { StaticImage } from 'gatsby-plugin-image';\nimport React from 'react';\n\nimport { ImageSectionProps } from '../../../types/ImageSection';\nimport ImageSection from '../../ImageSection';\nimport { alt as prevAlt, distance as prevDistance } from './2-Busan';\n\nexport const alt = 'Saitama, 1992';\nexport const distance = 2;\n\nfunction Saitama({ ratio = 1 }: ImageSectionProps) {\n  return (\n    <ImageSection\n      target=\"left\"\n      alt={alt}\n      prevAlt={prevAlt}\n      distance={distance}\n      prevDistance={prevDistance}\n      ratio={ratio}\n    >\n      <StaticImage\n        alt={alt}\n        objectFit=\"cover\"\n        objectPosition=\"right center\"\n        quality={70}\n        src=\"../../../images/tokyo-left.jpg\"\n        style={{ width: '100%' }}\n      />\n    </ImageSection>\n  );\n}\n\nexport default Saitama;\n","import { StaticImage } from 'gatsby-plugin-image';\nimport React from 'react';\n\nimport { ImageSectionProps } from '../../../types/ImageSection';\nimport ImageSection from '../../ImageSection';\nimport { alt as prevAlt, distance as prevDistance } from './3-Saitama';\n\nexport const alt = 'Chicago, 1994';\nexport const distance = 5;\n\nfunction Chicago({ ratio = 1 }: ImageSectionProps) {\n  return (\n    <ImageSection\n      target=\"left\"\n      alt={alt}\n      prevAlt={prevAlt}\n      distance={distance}\n      prevDistance={prevDistance}\n      ratio={ratio}\n    >\n      <StaticImage\n        alt={alt}\n        objectFit=\"cover\"\n        objectPosition=\"36% center\"\n        quality={70}\n        src=\"../../../images/chicago.jpg\"\n        style={{ width: '100%' }}\n      />\n    </ImageSection>\n  );\n}\n\nexport default Chicago;\n","import { StaticImage } from 'gatsby-plugin-image';\nimport React from 'react';\n\nimport { ImageSectionProps } from '../../../types/ImageSection';\nimport ImageSection from '../../ImageSection';\nimport { alt as prevAlt, distance as prevDistance } from './4-Chicago';\n\nexport const alt = 'Gwangju, 1995';\nexport const distance = 2;\n\nfunction Gwangju({ ratio = 1 }: ImageSectionProps) {\n  return (\n    <ImageSection\n      target=\"left\"\n      alt={alt}\n      prevAlt={prevAlt}\n      distance={distance}\n      prevDistance={prevDistance}\n      ratio={ratio}\n    >\n      <StaticImage\n        alt={alt}\n        objectFit=\"cover\"\n        objectPosition=\"center center\"\n        quality={70}\n        src=\"../../../images/gwangju.jpg\"\n        style={{ width: '100%' }}\n      />\n    </ImageSection>\n  );\n}\n\nexport default Gwangju;\n","import { StaticImage } from 'gatsby-plugin-image';\nimport React from 'react';\n\nimport { ImageSectionProps } from '../../../types/ImageSection';\nimport ImageSection from '../../ImageSection';\nimport { alt as prevAlt, distance as prevDistance } from './5-Gwangju';\n\nexport const alt = 'Calgary, 2001';\nexport const distance = 4;\n\nfunction Calgary({ ratio = 1 }: ImageSectionProps) {\n  return (\n    <ImageSection\n      target=\"left\"\n      alt={alt}\n      prevAlt={prevAlt}\n      distance={distance}\n      prevDistance={prevDistance}\n      ratio={ratio}\n    >\n      <StaticImage\n        alt={alt}\n        objectFit=\"cover\"\n        objectPosition=\"center center\"\n        quality={70}\n        src=\"../../../images/calgary.jpg\"\n        style={{ width: '100%' }}\n      />\n    </ImageSection>\n  );\n}\n\nexport default Calgary;\n","import { StaticImage } from 'gatsby-plugin-image';\nimport React from 'react';\n\nimport { ImageSectionProps } from '../../../types/ImageSection';\nimport ImageSection from '../../ImageSection';\nimport { alt as prevAlt, distance as prevDistance } from './6-Calgary';\n\nexport const alt = 'KAIST, 2006';\nexport const distance = 1;\n\nfunction KAIST({ ratio = 1 }: ImageSectionProps) {\n  return (\n    <ImageSection\n      target=\"left\"\n      alt={alt}\n      prevAlt={prevAlt}\n      distance={distance}\n      prevDistance={prevDistance}\n      ratio={ratio}\n    >\n      <StaticImage\n        alt={alt}\n        objectFit=\"cover\"\n        objectPosition=\"right center\"\n        quality={70}\n        src=\"../../../images/kaist-left.jpg\"\n        style={{ width: '100%' }}\n      />\n    </ImageSection>\n  );\n}\n\nexport default KAIST;\n","import { StaticImage } from 'gatsby-plugin-image';\nimport React from 'react';\n\nimport { ImageSectionProps } from '../../../types/ImageSection';\nimport ImageSection from '../../ImageSection';\nimport { alt as prevAlt, distance as prevDistance } from './7-KAIST';\n\nexport const alt = 'Helsinki, 2010';\nexport const distance = 5;\n\nfunction Helsinki({ ratio = 1 }: ImageSectionProps) {\n  return (\n    <ImageSection\n      target=\"left\"\n      alt={alt}\n      prevAlt={prevAlt}\n      distance={distance}\n      prevDistance={prevDistance}\n      ratio={ratio}\n    >\n      <StaticImage\n        alt={alt}\n        objectFit=\"cover\"\n        objectPosition=\"center center\"\n        quality={70}\n        src=\"../../../images/helsinki.jpg\"\n        style={{ width: '100%' }}\n      />\n    </ImageSection>\n  );\n}\n\nexport default Helsinki;\n","import { StaticImage } from 'gatsby-plugin-image';\nimport React from 'react';\n\nimport { ImageSectionProps } from '../../../types/ImageSection';\nimport ImageSection from '../../ImageSection';\nimport { alt as prevAlt, distance as prevDistance } from './8-Helsinki';\n\nexport const alt = 'Muhanga, 2012';\nexport const distance = 8;\n\nfunction Muhanga({ ratio = 1 }: ImageSectionProps) {\n  return (\n    <ImageSection\n      target=\"left\"\n      alt={alt}\n      prevAlt={prevAlt}\n      distance={distance}\n      prevDistance={prevDistance}\n      ratio={ratio}\n    >\n      <StaticImage\n        alt={alt}\n        objectFit=\"cover\"\n        objectPosition=\"75% center\"\n        quality={70}\n        src=\"../../../images/muhanga.jpg\"\n        style={{ width: '100%' }}\n      />\n    </ImageSection>\n  );\n}\n\nexport default Muhanga;\n","import { StaticImage } from 'gatsby-plugin-image';\nimport React from 'react';\n\nimport { ImageSectionProps } from '../../../types/ImageSection';\nimport ImageSection from '../../ImageSection';\nimport { alt as prevAlt, distance as prevDistance } from './9-Muhanga';\n\nexport const alt = 'Kigali, 2014';\nexport const distance = 7;\n\nfunction Kigali({ ratio = 1 }: ImageSectionProps) {\n  return (\n    <ImageSection\n      target=\"left\"\n      alt={alt}\n      prevAlt={prevAlt}\n      distance={distance}\n      prevDistance={prevDistance}\n      ratio={ratio}\n    >\n      <StaticImage\n        alt={alt}\n        objectFit=\"cover\"\n        objectPosition=\"center center\"\n        quality={70}\n        src=\"../../../images/kigali.jpg\"\n        style={{ width: '100%' }}\n      />\n    </ImageSection>\n  );\n}\n\nexport default Kigali;\n","import { StaticImage } from 'gatsby-plugin-image';\nimport React from 'react';\n\nimport { ImageSectionProps } from '../../../types/ImageSection';\nimport ImageSection from '../../ImageSection';\nimport { alt as prevAlt, distance as prevDistance } from './10-Kigali';\n\nexport const alt = 'Berlin, 2017';\nexport const distance = 3;\n\nfunction Berlin({ ratio = 1 }: ImageSectionProps) {\n  return (\n    <ImageSection\n      target=\"left\"\n      alt={alt}\n      prevAlt={prevAlt}\n      distance={distance}\n      prevDistance={prevDistance}\n      ratio={ratio}\n    >\n      <StaticImage\n        alt={alt}\n        objectFit=\"cover\"\n        objectPosition=\"65% center\"\n        quality={70}\n        src=\"../../../images/berlin.jpg\"\n        style={{ width: '100%' }}\n      />\n    </ImageSection>\n  );\n}\n\nexport default Berlin;\n","import { StaticImage } from 'gatsby-plugin-image';\nimport React from 'react';\n\nimport { ImageSectionProps } from '../../../types/ImageSection';\nimport ImageSection from '../../ImageSection';\nimport { alt as prevAlt, distance as prevDistance } from './11-Berlin';\n\nexport const alt = 'Singapore, 2018';\nexport const distance = 5;\n\nfunction Singapore({ ratio = 1 }: ImageSectionProps) {\n  return (\n    <ImageSection\n      target=\"left\"\n      alt={alt}\n      prevAlt={prevAlt}\n      distance={distance}\n      prevDistance={prevDistance}\n      ratio={ratio}\n    >\n      <StaticImage\n        alt={alt}\n        objectFit=\"cover\"\n        objectPosition=\"center center\"\n        quality={70}\n        src=\"../../../images/singapore.jpg\"\n        style={{ width: '100%' }}\n      />\n    </ImageSection>\n  );\n}\n\nexport default Singapore;\n","import { StaticImage } from 'gatsby-plugin-image';\nimport React from 'react';\n\nimport { ImageSectionProps } from '../../../types/ImageSection';\nimport ImageSection from '../../ImageSection';\nimport { alt as prevAlt, distance as prevDistance } from './12-Singapore';\n\nexport const alt = 'Hamburg, 2020';\nexport const distance = 1;\n\nfunction Hamburg({ ratio = 1 }: ImageSectionProps) {\n  return (\n    <ImageSection\n      target=\"left\"\n      alt={alt}\n      prevAlt={prevAlt}\n      distance={distance}\n      prevDistance={prevDistance}\n      ratio={ratio}\n    >\n      <StaticImage\n        alt={alt}\n        objectFit=\"cover\"\n        objectPosition=\"right center\"\n        quality={70}\n        src=\"../../../images/hamburg-left.jpg\"\n        style={{ width: '100%' }}\n      />\n    </ImageSection>\n  );\n}\n\nexport default Hamburg;\n","import React from 'react';\n\nimport * as s from '../style.module.scss';\nimport Seoul from './1-Seoul';\nimport Busan from './2-Busan';\nimport Saitama from './3-Saitama';\nimport Chicago from './4-Chicago';\nimport Gwangju from './5-Gwangju';\nimport Calgary from './6-Calgary';\nimport KAIST from './7-KAIST';\nimport Helsinki from './8-Helsinki';\nimport Muhanga from './9-Muhanga';\nimport Kigali from './10-Kigali';\nimport Berlin from './11-Berlin';\nimport Singapore from './12-Singapore';\nimport Hamburg from './13-Hamburg';\n\nfunction DW() {\n  return (\n    <div className={s.cities}>\n      <Seoul />\n      <Busan />\n      <Saitama ratio={1.3} />\n      <Chicago />\n      <Gwangju ratio={1.3} />\n      <Calgary />\n      <KAIST />\n      <Helsinki ratio={1.5} />\n      <Muhanga ratio={1} />\n      <Kigali ratio={1} />\n      <Berlin ratio={1} />\n      <Singapore ratio={1} />\n      <Hamburg />\n    </div>\n  );\n}\n\nexport default DW;\n","import { StaticImage } from 'gatsby-plugin-image';\nimport React from 'react';\n\nimport { ImageSectionProps } from '../../../types/ImageSection';\nimport { INITIAL_DISTANCE } from '../../Header/context';\nimport ImageSection from '../../ImageSection';\n\nexport const alt = 'Seoul, 1987';\nexport const distance = INITIAL_DISTANCE;\n\nfunction Seoul({ ratio = 1 }: ImageSectionProps) {\n  return (\n    <ImageSection\n      target=\"right\"\n      alt={alt}\n      prevAlt=\"Minjoo's Life Path\"\n      distance={distance}\n      prevDistance={INITIAL_DISTANCE}\n      ratio={ratio}\n    >\n      <StaticImage\n        alt={alt}\n        objectFit=\"cover\"\n        objectPosition=\"left center\"\n        quality={70}\n        src=\"../../../images/seoul-right.jpg\"\n        style={{ width: '100%' }}\n      />\n    </ImageSection>\n  );\n}\n\nexport default Seoul;\n","import { StaticImage } from 'gatsby-plugin-image';\nimport React from 'react';\n\nimport { ImageSectionProps } from '../../../types/ImageSection';\nimport ImageSection from '../../ImageSection';\nimport { alt as prevAlt, distance as prevDistance } from './1-Seoul';\n\nexport const alt = 'Tsukuba, 1993';\nexport const distance = 2;\n\nfunction Tsukuba({ ratio = 1 }: ImageSectionProps) {\n  return (\n    <ImageSection\n      target=\"right\"\n      alt={alt}\n      prevAlt={prevAlt}\n      distance={distance}\n      prevDistance={prevDistance}\n      ratio={ratio}\n    >\n      <StaticImage\n        alt={alt}\n        objectFit=\"cover\"\n        objectPosition=\"left center\"\n        quality={70}\n        src=\"../../../images/tokyo-right.jpg\"\n        style={{ width: '100%' }}\n      />\n    </ImageSection>\n  );\n}\n\nexport default Tsukuba;\n","import { StaticImage } from 'gatsby-plugin-image';\nimport React from 'react';\n\nimport { ImageSectionProps } from '../../../types/ImageSection';\nimport ImageSection from '../../ImageSection';\nimport { alt as prevAlt, distance as prevDistance } from './2-Tsukuba';\n\nexport const alt = 'Bundang, 1995';\nexport const distance = 1;\n\nfunction Bundang({ ratio = 1 }: ImageSectionProps) {\n  return (\n    <ImageSection\n      target=\"right\"\n      alt={alt}\n      prevAlt={prevAlt}\n      distance={distance}\n      prevDistance={prevDistance}\n      ratio={ratio}\n    >\n      <StaticImage\n        alt={alt}\n        objectFit=\"cover\"\n        objectPosition=\"center center\"\n        quality={70}\n        src=\"../../../images/bundang.jpg\"\n        style={{ width: '100%' }}\n      />\n    </ImageSection>\n  );\n}\n\nexport default Bundang;\n","import { StaticImage } from 'gatsby-plugin-image';\nimport React from 'react';\n\nimport { ImageSectionProps } from '../../../types/ImageSection';\nimport ImageSection from '../../ImageSection';\nimport { alt as prevAlt, distance as prevDistance } from './3-Bundang';\n\nexport const alt = 'Massachusetts, 1996';\nexport const distance = 4;\n\nfunction Massachusetts({ ratio = 1 }: ImageSectionProps) {\n  return (\n    <ImageSection\n      target=\"right\"\n      alt={alt}\n      prevAlt={prevAlt}\n      distance={distance}\n      prevDistance={prevDistance}\n      ratio={ratio}\n    >\n      <StaticImage\n        alt={alt}\n        objectFit=\"cover\"\n        objectPosition=\"60% center\"\n        quality={70}\n        src=\"../../../images/massachusetts.jpg\"\n        style={{ width: '100%' }}\n      />\n    </ImageSection>\n  );\n}\n\nexport default Massachusetts;\n","import { StaticImage } from 'gatsby-plugin-image';\nimport React from 'react';\n\nimport { ImageSectionProps } from '../../../types/ImageSection';\nimport ImageSection from '../../ImageSection';\nimport { alt as prevAlt, distance as prevDistance } from './4-Massachusetts';\n\nexport const alt = 'KAIST, 2006';\nexport const distance = 1;\n\nfunction KAIST({ ratio = 1 }: ImageSectionProps) {\n  return (\n    <ImageSection\n      target=\"right\"\n      alt={alt}\n      prevAlt={prevAlt}\n      distance={distance}\n      prevDistance={prevDistance}\n      ratio={ratio}\n    >\n      <StaticImage\n        alt={alt}\n        objectFit=\"cover\"\n        objectPosition=\"left center\"\n        quality={70}\n        src=\"../../../images/kaist-right.jpg\"\n        style={{ width: '100%' }}\n      />\n    </ImageSection>\n  );\n}\n\nexport default KAIST;\n","import { StaticImage } from 'gatsby-plugin-image';\nimport React from 'react';\n\nimport { ImageSectionProps } from '../../../types/ImageSection';\nimport ImageSection from '../../ImageSection';\nimport { alt as prevAlt, distance as prevDistance } from './5-KAIST';\n\nexport const alt = 'Yokohama, 2009';\nexport const distance = 3;\n\nfunction Yokohama({ ratio = 1 }: ImageSectionProps) {\n  return (\n    <ImageSection\n      target=\"right\"\n      alt={alt}\n      prevAlt={prevAlt}\n      distance={distance}\n      prevDistance={prevDistance}\n      ratio={ratio}\n    >\n      <StaticImage\n        alt={alt}\n        objectFit=\"cover\"\n        objectPosition=\"center center\"\n        quality={70}\n        src=\"../../../images/yokohama.jpg\"\n        style={{ width: '100%' }}\n      />\n    </ImageSection>\n  );\n}\n\nexport default Yokohama;\n","import { StaticImage } from 'gatsby-plugin-image';\nimport React from 'react';\n\nimport { ImageSectionProps } from '../../../types/ImageSection';\nimport ImageSection from '../../ImageSection';\nimport { alt as prevAlt, distance as prevDistance } from './6-Yokohama';\n\nexport const alt = 'Nara, 2010';\nexport const distance = 4;\n\nfunction Nara({ ratio = 1 }: ImageSectionProps) {\n  return (\n    <ImageSection\n      target=\"right\"\n      alt={alt}\n      prevAlt={prevAlt}\n      distance={distance}\n      prevDistance={prevDistance}\n      ratio={ratio}\n    >\n      <StaticImage\n        alt={alt}\n        objectFit=\"cover\"\n        objectPosition=\"44% center\"\n        quality={70}\n        src=\"../../../images/nara.jpg\"\n        style={{ width: '100%' }}\n      />\n    </ImageSection>\n  );\n}\n\nexport default Nara;\n","import { StaticImage } from 'gatsby-plugin-image';\nimport React from 'react';\n\nimport { ImageSectionProps } from '../../../types/ImageSection';\nimport ImageSection from '../../ImageSection';\nimport { alt as prevAlt, distance as prevDistance } from './7-Nara';\n\nexport const alt = 'Songpa, 2017';\nexport const distance = 2;\n\nfunction Songpa({ ratio = 1 }: ImageSectionProps) {\n  return (\n    <ImageSection\n      target=\"right\"\n      alt={alt}\n      prevAlt={prevAlt}\n      distance={distance}\n      prevDistance={prevDistance}\n      ratio={ratio}\n    >\n      <StaticImage\n        alt={alt}\n        objectFit=\"cover\"\n        objectPosition=\"44% center\"\n        quality={70}\n        src=\"../../../images/songpa.jpg\"\n        style={{ width: '100%' }}\n      />\n    </ImageSection>\n  );\n}\n\nexport default Songpa;\n","import { StaticImage } from 'gatsby-plugin-image';\nimport React from 'react';\n\nimport { ImageSectionProps } from '../../../types/ImageSection';\nimport ImageSection from '../../ImageSection';\nimport { alt as prevAlt, distance as prevDistance } from './8-Songpa';\n\nexport const alt = 'Hamburg, 2017';\nexport const distance = 1;\n\nfunction Hamburg({ ratio = 1 }: ImageSectionProps) {\n  return (\n    <ImageSection\n      target=\"right\"\n      alt={alt}\n      prevAlt={prevAlt}\n      distance={distance}\n      prevDistance={prevDistance}\n      ratio={ratio}\n    >\n      <StaticImage\n        alt={alt}\n        objectFit=\"cover\"\n        objectPosition=\"left center\"\n        quality={70}\n        src=\"../../../images/hamburg-right.jpg\"\n        style={{ width: '100%' }}\n      />\n    </ImageSection>\n  );\n}\n\nexport default Hamburg;\n","import { StaticImage } from 'gatsby-plugin-image';\nimport React, {\n  useCallback,\n  useContext,\n  useLayoutEffect,\n  useState,\n} from 'react';\n\nimport { HeaderContext } from '../Header/context';\nimport useIntersectionObserver from '../IntersectionObserver/useIntersectionObserver';\nimport {\n  alt as prevAltD,\n  distance as prevDistanceD,\n} from './Da-Woon/13-Hamburg';\nimport { alt as prevAltM, distance as prevDistanceM } from './Minjoo/9-Hamburg';\nimport * as s from './style.module.scss';\n\nexport const alt = 'London';\nexport const distance = -1;\n\nfunction London() {\n  const [upRef, setUpRef] = useState<HTMLElement>();\n  const [middleRef, setMiddleRef] = useState<HTMLElement>();\n  const [downRef, setDownRef] = useState<HTMLElement>();\n\n  const onUpInit = useCallback((node: HTMLElement) => {\n    if (!node) return;\n    setUpRef(node);\n  }, []);\n\n  const onMiddleInit = useCallback((node: HTMLElement) => {\n    if (!node) return;\n    setMiddleRef(node);\n  }, []);\n\n  const onDownInit = useCallback((node: HTMLElement) => {\n    if (!node) return;\n    setDownRef(node);\n  }, []);\n\n  const { currentEntry: entryUp } = useIntersectionObserver(upRef);\n  const { currentEntry: entryMiddle } = useIntersectionObserver(middleRef);\n  const { currentEntry: entryDown } = useIntersectionObserver(downRef);\n\n  const {\n    setAltLeft,\n    setAltRight,\n    setCaptionEntered,\n    setCaptionPosition,\n    setDistanceLeft,\n    setDistanceRight,\n    setFinalProgress,\n    setFinalReveal,\n  } = useContext(HeaderContext);\n\n  useLayoutEffect(() => {\n    if (!entryUp) return;\n\n    const { isIntersecting, intersectionRatio, boundingClientRect } = entryUp;\n\n    if (!isIntersecting) {\n      if (boundingClientRect.y < 0) {\n        setAltLeft('LONDON');\n        setAltRight('2021');\n        setCaptionPosition(1);\n      } else {\n        setCaptionPosition(0);\n      }\n      return;\n    }\n\n    if (boundingClientRect.y > 0) {\n      setAltLeft(intersectionRatio > 0.5 ? 'LONDON' : prevAltD);\n      setAltRight(intersectionRatio > 0.5 ? '2021' : prevAltM);\n      setCaptionPosition(intersectionRatio);\n      setDistanceLeft(\n        (distance - prevDistanceD) * intersectionRatio + prevDistanceD,\n      );\n      setDistanceRight(\n        (distance - prevDistanceM) * intersectionRatio + prevDistanceM,\n      );\n      setCaptionEntered(true);\n    }\n  }, [\n    entryUp,\n    setAltLeft,\n    setAltRight,\n    setCaptionEntered,\n    setCaptionPosition,\n    setDistanceLeft,\n    setDistanceRight,\n    setFinalProgress,\n  ]);\n\n  useLayoutEffect(() => {\n    if (!entryMiddle) return;\n\n    const { isIntersecting, intersectionRatio, boundingClientRect } =\n      entryMiddle;\n\n    if (!isIntersecting) return;\n    setCaptionPosition(1);\n\n    if (boundingClientRect.y > 0) {\n      setFinalProgress(intersectionRatio);\n    }\n  }, [\n    entryMiddle,\n    setAltLeft,\n    setAltRight,\n    setCaptionPosition,\n    setFinalProgress,\n  ]);\n\n  useLayoutEffect(() => {\n    if (!entryDown) return;\n\n    const { isIntersecting, intersectionRatio, boundingClientRect } = entryDown;\n\n    if (!isIntersecting) {\n      if (boundingClientRect.y < 0) {\n        setFinalReveal(1);\n      } else {\n        setFinalReveal(0);\n      }\n      return;\n    }\n\n    setFinalProgress(1);\n\n    if (boundingClientRect.y > 0) {\n      setCaptionEntered(false);\n      setFinalReveal(intersectionRatio);\n    }\n  }, [\n    entryDown,\n    setAltLeft,\n    setAltRight,\n    setCaptionEntered,\n    setFinalProgress,\n    setFinalReveal,\n  ]);\n\n  return (\n    <section className={s.london}>\n      <aside className={s.sentinel} ref={onUpInit} />\n      <aside className={s.sentinel} ref={onMiddleInit} />\n      <aside className={s.sentinel} ref={onDownInit} />\n      <div className={s.londonIntersection}>\n        <StaticImage\n          alt={alt}\n          objectFit=\"cover\"\n          objectPosition=\"center center\"\n          quality={70}\n          src=\"../../images/london.jpg\"\n          style={{ width: '100%' }}\n        />\n      </div>\n    </section>\n  );\n}\n\nexport default London;\n","import React from 'react';\n\nimport * as s from '../style.module.scss';\nimport Seoul from './1-Seoul';\nimport Tsukuba from './2-Tsukuba';\nimport Bundang from './3-Bundang';\nimport Massachusetts from './4-Massachusetts';\nimport KAIST from './5-KAIST';\nimport Yokohama from './6-Yokohama';\nimport Nara from './7-Nara';\nimport Songpa from './8-Songpa';\nimport Hamburg from './9-Hamburg';\n\nfunction MJ() {\n  return (\n    <div className={s.cities}>\n      <Seoul ratio={2.3} />\n      <Tsukuba ratio={1.3} />\n      <Bundang ratio={1.5} />\n      <Massachusetts ratio={1.5} />\n      <KAIST ratio={1.1} />\n      <Yokohama ratio={1.1} />\n      <Nara ratio={1.2} />\n      <Songpa />\n      <Hamburg />\n    </div>\n  );\n}\n\nexport default MJ;\n","import React, {\n  useCallback,\n  useContext,\n  useLayoutEffect,\n  useState,\n} from 'react';\n\nimport { HeaderContext } from '../Header/context';\nimport useIntersectionObserver from '../IntersectionObserver/useIntersectionObserver';\nimport DW from './Da-Woon';\nimport London from './London';\nimport MJ from './Minjoo';\nimport * as s from './style.module.scss';\n\nfunction Cities() {\n  const { setFinalProgress } = useContext(HeaderContext);\n  const [ref, setRef] = useState<HTMLDivElement>();\n  const onInit = useCallback((node: HTMLDivElement) => {\n    if (!node) return;\n    setRef(node);\n  }, []);\n  const { currentEntry } = useIntersectionObserver(ref);\n\n  useLayoutEffect(() => {\n    if (!currentEntry) return;\n\n    const { isIntersecting } = currentEntry;\n\n    if (!isIntersecting) {\n      return;\n    }\n\n    setFinalProgress(0);\n  }, [currentEntry, setFinalProgress]);\n\n  return (\n    <>\n      <div className={s.wrap} ref={onInit} lang=\"en\">\n        <DW />\n        <MJ />\n      </div>\n\n      <London />\n    </>\n  );\n}\n\nexport default Cities;\n","import { StaticImage } from 'gatsby-plugin-image';\nimport React, { useContext, useEffect, useRef, useState } from 'react';\n\nimport { alt } from '../Avatars';\nimport { HeaderContext } from '../Header/context';\nimport * as s from './style.module.scss';\n\nfunction Hero() {\n  const [width, setWidth] = useState<number>(0);\n  const { setCaptionEntered } = useContext(HeaderContext);\n\n  const ref = useRef<HTMLDivElement>(null);\n  const observer = useRef<IntersectionObserver | null>(null);\n  const resizeObserver = useRef<ResizeObserver | null>(null);\n\n  useEffect(() => {\n    resizeObserver.current = new ResizeObserver(([entry]) => {\n      setWidth(entry.contentRect.width);\n    });\n\n    resizeObserver.current.observe(ref.current!);\n\n    return () => {\n      resizeObserver.current?.disconnect();\n    };\n  }, []);\n\n  useEffect(() => {\n    observer.current = new IntersectionObserver(\n      ([entry]) => {\n        const { isIntersecting } = entry;\n\n        if (isIntersecting) {\n          setCaptionEntered(false);\n        } else {\n          setCaptionEntered(true);\n        }\n      },\n      { threshold: 0.5 },\n    );\n\n    observer.current.observe(ref.current!);\n\n    return () => {\n      observer.current?.disconnect();\n    };\n  }, [setCaptionEntered]);\n\n  return (\n    <div className={s.hero} ref={ref}>\n      <div className={s.titleWrap}>\n        <h2 className={s.titleTop}>The Wedding of</h2>\n        <h1 className={s.title} lang=\"en\">\n          Minjoo &{width >= 640 ? ' ' : <br />}\n          Da-Woon\n        </h1>\n        <h2 className={s.subtitle} lang=\"en\">\n          7th Jan, 2023\n        </h2>\n      </div>\n\n      <StaticImage src=\"../../images/front.jpg\" alt={alt} className={s.image} />\n      <div className={s.backDrop}>\n        <i className={s.indicator} />\n      </div>\n    </div>\n  );\n}\n\nexport default Hero;\n","import React from 'react';\n\nimport Avatars from '../Avatars';\nimport Caption from '../Caption';\nimport Cities from '../Cities';\nimport Hero from '../Hero';\nimport IntersectionObserverContextProvider from '../IntersectionObserver/context';\nimport HeaderContextProvider from './context';\nimport * as s from './style.module.scss';\n\nfunction Header() {\n  return (\n    <IntersectionObserverContextProvider\n      options={{ threshold: new Array(101).fill(0).map((_, i) => i / 100) }}\n    >\n      <HeaderContextProvider>\n        <header className={s.header}>\n          <Avatars />\n          <Caption />\n          <Hero />\n          <Cities />\n        </header>\n      </HeaderContextProvider>\n    </IntersectionObserverContextProvider>\n  );\n}\n\nexport default Header;\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default","scrollbarWidth","setScrollbarWidth","useState","ref","useRef","observer","useEffect","current","ResizeObserver","window","innerWidth","document","documentElement","clientWidth","observe","_observer$current","disconnect","altLeft","altRight","captionEntered","captionPosition","useContext","HeaderContext","styleLeft","useMemo","transform","styleRight","React","className","cx","style","lang","IntersectionObserverContext","createContext","currentEntries","children","options","setCurrentEntries","setObserver","IntersectionObserver","entries","value","Provider","node","currentEntry","find","entry","target","unobserve","cities","sentinel","alt","prevAlt","distance","prevDistance","ratio","setRef","onInit","useCallback","useIntersectionObserver","setDistanceLeft","setDistanceRight","setAltLeft","setAltRight","setDistance","setAlt","isIntersecting","intersectionRatio","boundingClientRect","y","height","INITIAL_DISTANCE","ImageSection","StaticImage","objectFit","objectPosition","quality","src","width","s","Seoul","Busan","Saitama","Chicago","Gwangju","Calgary","KAIST","Helsinki","Muhanga","Kigali","Berlin","Singapore","Hamburg","upRef","setUpRef","middleRef","setMiddleRef","downRef","setDownRef","onUpInit","onMiddleInit","onDownInit","entryUp","entryMiddle","entryDown","setCaptionEntered","setCaptionPosition","setFinalProgress","setFinalReveal","useLayoutEffect","prevAltD","prevAltM","Tsukuba","Bundang","Massachusetts","Yokohama","Nara","Songpa","DW","MJ","London","setWidth","resizeObserver","_ref","contentRect","_resizeObserver$curre","_ref2","threshold","IntersectionObserverContextProvider","fill","map","_","HeaderContextProvider","Avatars","Caption","Hero","Cities"],"sourceRoot":""}